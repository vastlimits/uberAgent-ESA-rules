#
# The rules are generated from the Sigma GitHub repository at https://github.com/Neo23x0/sigma
# Follow these steps to get the latest rules from the repository with Python
#    1. Clone the repository locally
#    2. Using a commandline, change working directory to the just cloned repository
#    3. Run sigmac -I --target uberagent -r rules/
#
# The rules in this file are marked with sigma-level: high
#

[ActivityMonitoringRule platform=MacOS]
# Detecting attempts to extract passwords with grep and laZagne
RuleId = 53b1b378-9b06-4992-b972-dde6e423d2b4
RuleName = Credentials In Files
EventType = Process.Start
Tag = proc-start-credentials-in-files
RiskScore = 75
Annotation = {"mitre_attack": ["T1552.001"]}
Query = ((Process.Path like r"%/grep" and Process.CommandLine like r"%password%") or Process.CommandLine like r"%laZagne%")

[ActivityMonitoringRule platform=MacOS]
# Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This rule detect using dd and truncate to add a junk data to file.
RuleId = 95361ce5-c891-4b0a-87ca-e24607884a96
RuleName = Binary Padding - MacOS
EventType = Process.Start
Tag = proc-start-binary-padding-macos
RiskScore = 75
Annotation = {"mitre_attack": ["T1027.001"]}
Query = ((Process.Path like r"%/truncate" and Process.CommandLine like r"%-s%") or ((Process.Path like r"%/dd" and Process.CommandLine like r"%if=%") and not (Process.CommandLine like r"%of=%")))

[ActivityMonitoringRule platform=MacOS]
# Detects the execution traces of the WizardUpdate malware. WizardUpdate is a macOS trojan that attempts to infiltrate macOS machines to steal data and it is associated with other types of malicious payloads, increasing the chances of multiple infections on a device.
RuleId = f68c4a4f-19ef-4817-952c-50dce331f4b0
RuleName = Potential WizardUpdate Malware Infection
EventType = Process.Start
Tag = proc-start-potential-wizardupdate-malware-infection
RiskScore = 75
Query = ((Process.Path like r"%/sh" and Process.CommandLine like r"%=$(curl %" and Process.CommandLine like r"%eval%") or (Process.Path like r"%/curl" and Process.CommandLine like r"%\_intermediate\_agent\_%"))

